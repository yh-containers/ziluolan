<?php
namespace frontend\controllers;


class MineController extends CommonController
{

    public $is_need_login=true;
    /**
     * 用户模型
     * @var \common\models\User
     * */
    protected $user_model;

    public function init()
    {
        parent::init(); // TODO: Change the autogenerated stub
        $this->user_model = \common\models\User::findOne($this->user_id);
        if(empty($this->user_model)){
            $this->user_id = 0;
        }
    }

    public function actionIndex()
    {

        return $this->render('index',[
            'user_model' => $this->user_model
        ]);
    }

    //个人中心
    public function actionInfo()
    {
        return $this->render('info',[
            'user_model' => $this->user_model
        ]);
    }

    //购物车列表
    public function actionCart()
    {
        $list = \common\models\UserCart::find()
            ->asArray()
            ->joinWith(['linkGoods'])
            ->with(['linkSkuAttrPrice'])
            ->all();

        foreach ($list as &$vo){
            $attr_name = '';
            if($vo['linkSkuAttrPrice']['sku_group']){
                $attrs = explode('|',$vo['linkSkuAttrPrice']['sku_group']);
                $model_sku_attr = \common\models\GoodsSkuAttr::find()->asArray()->where(['id'=>$attrs])->all();
                $model_sku_attr_name = array_column($model_sku_attr,'name');
                $attr_name = implode('/',$model_sku_attr_name);
            }
            $vo['attr_name'] = $attr_name;
        }


        return $this->render('cart',[
            'list' => $list
        ]);
    }


    //添加购物车
    public function actionAddCart()
    {
        $gid = $this->request->get('gid');
        $sku_id = $this->request->get('sku_id');
        $num = $this->request->get('num',1);
        $num_step = $this->request->get('num_step',0);
        $mod = $this->request->get('mod',0);
        if(empty($gid)) throw new \yii\base\UserException('请求信息异常:id');
//        if(empty($sku_id)) throw new \yii\base\UserException('请求信息异常:sku_id');

        $bool = $this->user_model->addShoppingCart($gid,$sku_id,$num,$mod,$num_step);
        //绑定购物车数量
        $cart_num = \common\models\UserCart::getNum($this->user_id);
        if($bool){
            return  $this->asJson(['code'=>1,'msg'=>'加入购物车成功','cart_num'=>$cart_num]);
        }else{
            return  $this->asJson(['code'=>0,'msg'=>'加入购物车失败']);
        }
    }

    //商品收藏
    public function actionGoodsCol()
    {
        $gid = $this->request->get('gid');
        $is_del = $this->request->get('is_del');
        $is_del==1?true:false;
        if(empty($gid)) throw new \yii\base\UserException('请求信息异常');
        try{
            list($bool,$is_col) = $this->user_model->goodsCol($gid,$is_del);
        }catch (\Exception $e){
            return  $this->asJson(['code'=>0,'msg'=>'操作异常:'.$e->getMessage()]);
        }

        if($bool){
            return  $this->asJson(['code'=>1,'msg'=>!$is_del?($is_col?'收藏成功':'已取消收藏'):'已取消收藏','is_col'=>$is_col]);
        }else{
            return  $this->asJson(['code'=>0,'msg'=>'收藏失败']);
        }
    }

    //购物车商品选中/取消选中效果
    public function actionCartChoose()
    {
        $cart_id = $this->request->get('cart_id');
        $is_checked = $this->request->get('is_checked');
        if(empty($cart_id) && $is_checked=='') throw new \yii\base\UserException('请求信息异常');
        list($bool,$is_checked) = $this->user_model->cartChoose($cart_id,$is_checked==''?null:$is_checked);


        if($bool){
            return  $this->asJson(['code'=>1,'msg'=>'操作成功','is_checked'=>$is_checked]);
        }else{
            return  $this->asJson(['code'=>0,'msg'=>'收藏失败']);
        }
    }

    //删除购物车
    public function actionCartDel()
    {
        $c_ids = $this->request->get('c_ids');
        $c_ids = is_array($c_ids)?$c_ids:($c_ids?explode(',',$c_ids):[]);
        if(empty($c_ids)) throw new \yii\base\UserException('请求信息异常');

        try{
            $this->user_model->cartDel($c_ids);
            //绑定购物车数量
            $cart_num = \common\models\UserCart::getNum($this->user_id);
            return  $this->asJson(['code'=>1,'msg'=>'操作成功','cart_num'=>$cart_num]);
        }catch (\Exception $e) {
            return  $this->asJson(['code'=>0,'msg'=>'操作失败']);
        }

    }


}